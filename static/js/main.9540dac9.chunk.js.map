{"version":3,"sources":["logo.svg","components/CalcContainer.js","components/Row.js","components/Col.js","components/Switch.js","components/Button.js","utils/Constants.js","screens/Main.js","utils/Service.js","App.js","reportWebVitals.js","index.js"],"names":["CalcContainer","props","className","children","React","memo","Row","Col","Switch","label","onChange","value","type","id","htmlFor","Button","onClick","MULTIPLY","ADDITION","SUBTRACT","DIVIDE","Main","useState","result","setResult","holder","setHolder","operations","setOperations","preOperations","setPreOperations","showAdvance","setShowAdvance","dark","setDark","updateOperation","length","CONST","parseInt","updateHolder","val","document","documentElement","Array","fill","map","v","i","num","Math","pow","sqrt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9540dac9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nfunction CalcContainer(props) {\n  return <div className=\"box calc-container \">{props.children}</div>;\n}\n\nexport default React.memo(CalcContainer);\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={\"flex-row\"}>{props.children}</div>;\n}\n\nexport default React.memo(Row);\n","import React from \"react\";\n\nfunction Col(props) {\n  return <div className={\"flex-col\"}>{props.children}</div>;\n}\n\nexport default React.memo(Col);\n","import React from \"react\";\n\nfunction Switch({ label, onChange, value }) {\n  return (\n    <>\n      {label}\n      <input type=\"checkbox\" id={label} value={value} onChange={onChange} />\n      <label htmlFor={label}></label>\n    </>\n  );\n}\n\nexport default React.memo(Switch);\n","import React from \"react\";\n\nfunction Button({ id, onClick, label }) {\n  return (\n    <button key={id} onClick={onClick}>\n      {label}\n    </button>\n  );\n}\n\nexport default React.memo(Button);\n","export default {\n  OPS: {\n    MULTIPLY: \"MULTIPLY\",\n    ADDITION: \"ADDITION\",\n    SUBTRACT: \"SUBTRACT\",\n    DIVIDE: \"DIVIDE\",\n  },\n};\n","import React from \"react\";\nimport CalcContainer from \"../components/CalcContainer\";\nimport Row from \"../components/Row\";\nimport Col from \"../components/Col\";\nimport Switch from \"../components/Switch\";\nimport Button from \"../components/Button\";\nimport \"./Main.css\";\nimport CONST from \"../utils/Constants\";\nimport * as service from \"../utils/Service\";\n\nfunction Main({ ...props }) {\n  const [result, setResult] = React.useState(0);\n  const [holder, setHolder] = React.useState(0);\n  const [operations, setOperations] = React.useState([]);\n  const [preOperations, setPreOperations] = React.useState([]);\n  const [showAdvance, setShowAdvance] = React.useState(false);\n  const [dark, setDark] = React.useState(false);\n\n  const updateOperation = (type) => {\n    if (operations.length > 0) {\n      switch (operations[operations.length - 1]) {\n        case CONST.OPS.ADDITION:\n          setResult(parseInt(holder) + parseInt(result));\n          setHolder(parseInt(holder) + parseInt(result));\n          break;\n        case CONST.OPS.SUBTRACT:\n          setResult(parseInt(holder) - parseInt(result));\n          setHolder(parseInt(holder) - parseInt(result));\n          break;\n        case CONST.OPS.MULTIPLY:\n          setResult(parseInt(holder) * parseInt(result));\n          setHolder(parseInt(holder) * parseInt(result));\n          break;\n        case CONST.OPS.DIVIDE:\n          setResult(parseInt(holder) / parseInt(result));\n          setHolder(parseInt(holder) / parseInt(result));\n          break;\n        default:\n          break;\n      }\n    } else {\n      setHolder(result);\n    }\n    setOperations([...operations, type]);\n  };\n\n  const clear = () => {\n    setHolder(0);\n    setResult(0);\n    setOperations([]);\n    setPreOperations([]);\n  };\n\n  const updateHolder = (val) => {\n    if (operations.length > 0) {\n      if (operations.length !== preOperations.length) {\n        setResult(val);\n        setPreOperations([...preOperations, operations[operations.length - 1]]);\n      } else {\n        setResult(parseInt(result) + \"\" + val);\n      }\n    } else {\n      if (parseInt(result) > 0) {\n        setResult(parseInt(result) + \"\" + val);\n      } else {\n        setResult(val);\n      }\n    }\n  };\n\n  const showResult = () => {\n    updateOperation(operations[operations.length - 1]);\n    setHolder(0);\n    setOperations([]);\n    setPreOperations([]);\n  };\n  document.documentElement.className = dark ? \"dark\" : \"light\";\n  return (\n    <div className=\"container center dir-col\">\n      <Row>\n        <Switch\n          label=\"Theme\"\n          value={dark}\n          onChange={() => {\n            setDark(!dark);\n          }}\n        />\n      </Row>\n      <Row>\n        <Switch\n          label=\"Scientic Mode\"\n          value={showAdvance}\n          onChange={() => setShowAdvance(!showAdvance)}\n        />\n      </Row>\n      <CalcContainer>\n        <header id=\"screen\">{result}</header>\n        <Row>\n          <Col>\n            <div>\n              {Array(9)\n                .fill()\n                .map((v, i) => {\n                  return (\n                    <Button\n                      label={i + 1}\n                      key={`num-${i + 1}`}\n                      onClick={() => updateHolder(i + 1)}\n                    />\n                  );\n                })}\n            </div>\n            <div>\n              <Button onClick={() => clear()} label=\"Clear\" />\n              <Button onClick={() => updateHolder(0)} label=\"0\" />\n              <Button onClick={showResult} label=\"=\" />\n            </div>\n            {showAdvance && (\n              <div>\n                <Button\n                  onClick={() => {\n                    setResult(service.sign(result));\n                  }}\n                  label=\"Sign\"\n                />\n                <Button\n                  onClick={() => {\n                    setResult(service.square(result));\n                  }}\n                  label=\"Square\"\n                />\n                <Button\n                  onClick={() => {\n                    setResult(service.squareRoot(result));\n                  }}\n                  label=\"Square root\"\n                />\n              </div>\n            )}\n          </Col>\n          <Col>\n            <Button\n              onClick={() => updateOperation(CONST.OPS.ADDITION)}\n              label=\"+\"\n            />\n            <Button\n              onClick={() => updateOperation(CONST.OPS.SUBTRACT)}\n              label=\"-\"\n            />\n            <Button\n              onClick={() => updateOperation(CONST.OPS.MULTIPLY)}\n              label=\"*\"\n            />\n            <Button\n              onClick={() => updateOperation(CONST.OPS.DIVIDE)}\n              label=\"/\"\n            />\n          </Col>\n        </Row>\n      </CalcContainer>\n    </div>\n  );\n}\n\nexport default React.memo(Main);\n","export const square = (num) => Math.pow(num, 2);\n\nexport const squareRoot = (num) => Math.sqrt(num);\n\nexport const sign = (num) => -num;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Main from \"./screens/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}